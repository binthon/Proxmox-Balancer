trigger: none

name: 'azureVM'

resources:
  pipelines:
    - pipeline: tfvars-generate #alias          
      source: tfvars-generate #nazwa pipelinu w ADO           
      trigger: true # trigger jak tamten siƒô sko≈Ñczy to ten uruchamia        

pool:
  name: "Win"
  demands:
    - Agent.Name -equals win
          
parameters: #definicja artefaktu jakny folder/plik
  - name: artifactName
    type: string
    default: tfvars                        

  - name: fileName
    type: string
    default: terraform.tfvars.json

steps:
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '$(System.TeamProject)'
    definition: 'tfvars-generate'
    runVersion: 'latest' #ostatni run tego 
    artifactName: ${{ parameters.artifactName }} #zmienna z prameters
    targetPath: '$(Pipeline.Workspace)/tfvars' # zapis w agencie


- task: PowerShell@2 #ogolny check pliku, ustawienie zmiennych pipelin√≥w ##vso
  name: CheckTfvars
  displayName: "‚úÖ Sprawd≈∫ czy plik tfvars istnieje"
  inputs:
    targetType: 'inline'
    script: |
      $fileName = "${{ parameters.fileName }}"
      $filePath = "$(Pipeline.Workspace)\tfvars\$fileName"

      if (Test-Path $filePath) {
        Write-Host "‚úÖ Znaleziono plik tfvars.json"
        Write-Host "##vso[task.setvariable variable=shouldRunTerraform]true" 
      } else {
        Write-Host "‚ùå Nie znaleziono pliku tfvars.json"
        Write-Host "##vso[task.setvariable variable=shouldRunTerraform]false"
      }

- script: type "$(Pipeline.Workspace)/tfvars/terraform.tfvars.json"
  displayName: "üßê Poka≈º zawarto≈õƒá tfvars (debug)"

- script: terraform init
  workingDirectory: infra/
  condition: eq(variables['shouldRunTerraform'], 'true') #wykona siƒô je≈õli w tasku wyzej zmienna ustawionma na true
  displayName: "Terraform Init"

- script: terraform plan -var-file="$(Pipeline.Workspace)/tfvars/${{ parameters.fileName }}"
  workingDirectory: infra/
  condition: eq(variables['shouldRunTerraform'], 'true') #wykona siƒô je≈õli w tasku wyzej zmienna ustawionma na true
  displayName: "Terraform Plan"

- script: terraform apply -auto-approve -var-file="$(Pipeline.Workspace)/tfvars/${{ parameters.fileName }}"
  workingDirectory: infra/
  condition: eq(variables['shouldRunTerraform'], 'true') #wykona siƒô je≈õli w tasku wyzej zmienna ustawionma na true
  displayName: "Terraform Apply"

- script: |
    echo Czyszczenie agenta...
    rd /s /q "$(Pipeline.Workspace)"
    rd /s /q "$(Build.ArtifactStagingDirectory)"
    rd /s /q "$(Agent.TempDirectory)"
  condition: always()
  displayName: "üßπ Czyszczenie danych po pipeline (Windows)"